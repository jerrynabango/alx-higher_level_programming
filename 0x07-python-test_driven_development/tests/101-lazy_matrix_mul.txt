Lazy matrix multiplication
===========================
101-lazy_matrix_mul.py
===========================
from 101-lazy_matrix_mul import lazy_matrix_mul:
	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

m_a = [[7, 5], [1, 5]]
m_b = m_a
result = lazy_matrix_mul(m_a, m_b)
print(result)
[[ 6, 35], [23, 40]]

m_a = [[1, 2]]
m_b = [[3, 4], [5, 6]]
result = lazy_matrix_mul(m_a, m_b)
print(result)
[[13, 16]]

m_a = [[3, 7], [5, 4]]
m_b = [[8, 6], [4, 3], [2, 9]]
result = lazy_matrix_mul(m_a, m_b)
print(result)
ValueError: shapes (2, 2) and (3, 2) not aligned: 2 (dim 1) != 3 (dim 0)

result = lazy_matrix_mul(m_a)
print(result)
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

m_a = [[3, 5], [2, 1]]
m_b = [[6, 2], [7, 9, 1]]
result = lazy_matrix_mul(m_a, m_b)
print(result)
ValueError: setting an array element with a sequence

result = lazy_matrix_mul([7, 5], [[3, 4]])
print(result)
ValueError: shapes (2,) and (1, 2) not aligned: 2 (dim 0) != 1 (dim 0)

m_a = [[7, 9], [1, 3, 8]]
m_b = m_a
result = lazy_matrix_mul(m_a, m_b)
print(result)
ValueError: setting an array element with a sequence


result = lazy_matrix_mul([[]], [[5, 6], [7, 8]])
print(result)
ValueError: shapes (1, 0) and (2, 2) not aligned: 0 (dim 1) != 2 (dim 0)

result = lazy_matrix_mul([[5, 6], [7, 8]], [[]])
print(result)
ValueError: shapes (2, 2) and (1, 0) not aligned: 2 (dim 1) != 1 (dim 0)


result = lazy_matrix_mul([[3, "non-number"]], [[5, 8]])
print(result)
ValueError: could not convert string to float: 'non-number'


result = lazy_matrix_mul("not a list", [[1, 2]])
print(result)
TypeError: unsupported operand type(s) for *: 'str' and 'list'


result = lazy_matrix_mul([[1, 2]], "also not a list")
print(result)
TypeError: unsupported operand type(s) for *: 'list' and 'str'

result = lazy_matrix_mul("not a list", "also not a list")
print(result)
TypeError:

